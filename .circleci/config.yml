version: 2.1

executors:
  deploy:
    parameters:
      dist:
        type: string
    docker:
      - image: kroniak/ssh-client
    working_directory: /output
    environment:
      DISTRO: << parameters.dist >>
  rpmbuilder:
    parameters:
      dist:
        type: string
      rpmlint:
        type: integer
        default: 1
    docker:
      - image: getpagespeed/rpmbuilder:<< parameters.dist >>
    working_directory: /sources
    environment:
      RPMLINT: << parameters.rpmlint >>
jobs:
  build:
    parameters:
      dist:
        description: "The dist tag of OS to build for"
        type: string
    resource_class: small
    executor:
      name: rpmbuilder
      dist: << parameters.dist >>
    steps:
      - checkout
      - run:
          name: "Run the build itself: this will do rpmlint and check RPMs existence among other things."
          command: build
      - persist_to_workspace:
          root: /output
          paths:
            - "*.rpm"
  deploy:
    parameters:
      dist:
        description: "The dist tag of OS to deploy for"
        type: string
    executor:
      name: deploy
      dist: << parameters.dist >>
    steps:
      - attach_workspace:
          at: /output
      - add_ssh_keys:
          fingerprints:
            - "8c:a4:dd:2c:47:4c:63:aa:90:0b:e0:d6:15:be:87:82"
      - run:
          name: "Ensure project specific upload directory to avoid deploy collisions"
          command: >
            ssh -o StrictHostKeyChecking=no
            $GPS_BUILD_USER@$GPS_BUILD_SERVER
            "mkdir -p ~/incoming/${CIRCLE_PROJECT_REPONAME}/${DISTRO}/${CIRCLE_BRANCH}"
      - run:
          name: "Deploy all RPMs to GetPageSpeed repo."
          command: >
            scp -o StrictHostKeyChecking=no -q -r *.rpm
            $GPS_BUILD_USER@$GPS_BUILD_SERVER:~/incoming/${CIRCLE_PROJECT_REPONAME}/${DISTRO}/${CIRCLE_BRANCH}/
      - run:
          name: "Trigger Deploy Hook."
          command: >
            ssh -o StrictHostKeyChecking=no -q
            $GPS_BUILD_USER@$GPS_BUILD_SERVER
            "nohup ~/scripts/incoming.sh ${CIRCLE_PROJECT_REPONAME}/${DISTRO}/${CIRCLE_BRANCH}/ > ~/incoming/$CIRCLE_PROJECT_REPONAME/$DISTRO/${CIRCLE_BRANCH}/process.log 2>&1&"
workflows:
  build-deploy-amzn2:
    jobs:
    - build: {dist: amzn2, name: build-amzn2}
    - deploy:
        context: org-global
        dist: amzn2
        name: deploy-amzn2
        requires: [build-amzn2]
  build-deploy-amzn2023:
    jobs:
    - build: {dist: amzn2023, name: build-amzn2023}
    - deploy:
        context: org-global
        dist: amzn2023
        name: deploy-amzn2023
        requires: [build-amzn2023]
  build-deploy-el7:
    jobs:
    - build: {dist: el7, name: build-el7}
    - deploy:
        context: org-global
        dist: el7
        name: deploy-el7
        requires: [build-el7]
  build-deploy-el8:
    jobs:
    - build: {dist: el8, name: build-el8}
    - deploy:
        context: org-global
        dist: el8
        name: deploy-el8
        requires: [build-el8]
  build-deploy-el9:
    jobs:
    - build: {dist: el9, name: build-el9}
    - deploy:
        context: org-global
        dist: el9
        name: deploy-el9
        requires: [build-el9]
  build-deploy-fc39:
    jobs:
    - build: {dist: fc39, name: build-fc39}
    - deploy:
        context: org-global
        dist: fc39
        name: deploy-fc39
        requires: [build-fc39]
  build-deploy-fc40:
    jobs:
    - build: {dist: fc40, name: build-fc40}
    - deploy:
        context: org-global
        dist: fc40
        name: deploy-fc40
        requires: [build-fc40]
  build-deploy-fc41:
    jobs:
    - build: {dist: fc41, name: build-fc41}
    - deploy:
        context: org-global
        dist: fc41
        name: deploy-fc41
        requires: [build-fc41]
  build-deploy-sles15:
    jobs:
    - build: {dist: sles15, name: build-sles15}
    - deploy:
        context: org-global
        dist: sles15
        name: deploy-sles15
        requires: [build-sles15]
